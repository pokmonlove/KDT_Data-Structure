{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyP8VZJF6V9ki32FqvZdCqOI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **1. 더블 링크드 리스트**\n","\n","* 양방향으로 연결되어 있어서 노드 탐색이 양쪽으로 모두 가능\n","* 메모리 활용을 비교적 많이 한다\n","\n"],"metadata":{"id":"TyFeDmPn2FmV"}},{"cell_type":"code","source":["class Node:\n","  def __init__(self, data, prev=None, next=None):\n","    self.prev=prev\n","    self.data=data\n","    self.next=next\n","\n","class NodeMgmt:\n","  def __init__(self, data):\n","    self.head=Node(data)\n","    self.tail=self.head\n","\n","  def insert(self, data):\n","    #암것도 없을 때\n","    if self.head==None:\n","      self.head=Node(data)\n","      self.tail=self.head\n","    else:\n","      node=self.head\n","      while node.next:\n","        node=node.next\n","      new=Node(data)\n","      node.next=new\n","      new.prev=node\n","      self.tail=new\n","\n","  def node_print(self):\n","    node=self.head\n","    while node:\n","      print(node.data)\n","      node=node.next\n","\n","\n","  def search_form_head(self, data):\n","      hnode = self.head\n","      while hnode is not None:\n","          if hnode.data == data:\n","              return hnode.data\n","          hnode = hnode.next  # 다음 노드로 이동\n","      return False  # 모든 노드를 확인한 후에도 찾지 못했을 때 False 반환\n","\n","\n","  def search_form_tail(self, data):\n","      tnode = self.tail\n","      while tnode is not None:\n","          if tnode.data == data:\n","              return tnode.data\n","          tnode = tnode.prev  # 이전 노드로 이동\n","      return False  # 모든 노드를 확인한 후에도 찾지 못했을 때 False 반환\n"],"metadata":{"id":"RbAYmaEX2LP4"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["double_linkedlist=NodeMgmt(0)\n","for data in range(1, 11):\n","  double_linkedlist.insert(data)\n","double_linkedlist.node_print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNyb4ELq4WOK","executionInfo":{"status":"ok","timestamp":1728978328186,"user_tz":-540,"elapsed":3,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"3b4041ae-26ac-4f72-8082-e834e6482776"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"code","source":["double_linkedlist.search_form_tail(10)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ouSoYP1nAL11","executionInfo":{"status":"ok","timestamp":1728978329748,"user_tz":-540,"elapsed":368,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"706fef44-c56b-4994-f150-b5600dfac9e6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["10"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["double_linkedlist.search_form_tail(11)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uOjO1lNSD7kv","executionInfo":{"status":"ok","timestamp":1728978331003,"user_tz":-540,"elapsed":3,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"e7a1993b-097a-44a5-c655-f25fdec9c4be"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["double_linkedlist.search_form_head(4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-a3zUNnuEQM6","executionInfo":{"status":"ok","timestamp":1728978331922,"user_tz":-540,"elapsed":1,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"6572c40b-f21d-4d08-ac09-9d3568b1363d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["double_linkedlist.search_form_head(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a3anP-dRFQsN","executionInfo":{"status":"ok","timestamp":1728978333276,"user_tz":-540,"elapsed":1,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"dd8b3b95-133d-4c37-91f1-d0158a6f4485"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","source":["###문제1\n","\n","데이터를 앞에서부터 검색하여\n","해당값이 존재하는 경우 그 값을 반환하고 존재하지 않으면 False 반환\n"],"metadata":{"id":"qTRhYTE54eR6"}},{"cell_type":"markdown","source":["###문제2\n","데이터를 뒤에서부터 검색해 해당값이 존재하는 경우 그 값을 반환하고 존재하지 않으면 False 반환"],"metadata":{"id":"4SfBWn3w5ILy"}},{"cell_type":"code","source":["class Node:\n","  def __init__(self, data, prev=None, next=None):\n","    self.prev=prev\n","    self.data=data\n","    self.next=next\n","\n","class NodeMgmt:\n","  def __init__(self, data):\n","    self.head=Node(data)\n","    self.tail=self.head\n","\n","  def insert(self, data):\n","    #암것도 없을 때\n","    if self.head==None:\n","      self.head=Node(data)\n","      self.tail=self.head\n","    else:\n","      node=self.head\n","      while node.next:\n","        node=node.next\n","      new=Node(data)\n","      node.next=new\n","      new.prev=node\n","      self.tail=new\n","\n","  def node_print(self):\n","    node=self.head\n","    while node:\n","      print(node.data)\n","      node=node.next\n","\n","#강사님 코드\n","  def search_form_head(self, data):\n","    if self.head == None:\n","      return False\n","    node=self.head\n","    while node:\n","      if node.data==data:\n","        return node.data\n","      else:\n","        node=node.next\n","    return False\n","\n","\n","  def search_form_tail(self, data):\n","    if self.tail == None:\n","      return False\n","    node=self.tail\n","    while node:\n","      if node.data==data:\n","        return node.data\n","      else:\n","        node=node.prev\n","    return False"],"metadata":{"id":"AcVPHcQgrlWP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["double_linkedlist=NodeMgmt(0)\n","for data in range(1, 11):\n","  double_linkedlist.insert(data)\n","double_linkedlist.node_print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FMmJMLOjsq4C","executionInfo":{"status":"ok","timestamp":1729038038781,"user_tz":-540,"elapsed":365,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"df2782d8-e545-41c7-8c0d-dbd9240ae5f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"code","source":["double_linkedlist.node_print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"O8eEBaIasLCG","executionInfo":{"status":"ok","timestamp":1729038040771,"user_tz":-540,"elapsed":352,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"c61fc7f8-144b-4865-f521-4e6216ed4150"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"code","source":["double_linkedlist.search_form_head(11)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q23tPg-krlPd","executionInfo":{"status":"ok","timestamp":1729038080941,"user_tz":-540,"elapsed":357,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"411a51e6-8622-4b30-b9ce-fe7d9e897f10"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["double_linkedlist.search_form_tail(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Q6aHI4Ts2d7","executionInfo":{"status":"ok","timestamp":1729038095797,"user_tz":-540,"elapsed":373,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"5ce6d718-1d07-4b47-fd1a-f33da5566de4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["#10월 16일"],"metadata":{"id":"go4nIsJws8Lb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### 문제3\n","* 위 코드에서 노드 데이터가 특정 숫자인 노드 앞에 데이터를 추가하는 메서드를 만들고 테스트해보자\n","* 단 기준값을 찾지 못할 경우 데이터를 삽입하지 않음\n","```\n","insert_before(삽입할 데이터, 기준값)\n","삽입할 데이터: 실제 삽입될 데이터\n","기준값: 기준값 앞에 데이터가 삽입되도록 함\n","```"],"metadata":{"id":"9yuGw2mZtCrE"}},{"cell_type":"code","source":["class Node:\n","  def __init__(self, data, prev=None, next=None):\n","    self.prev=prev\n","    self.data=data\n","    self.next=next\n","\n","class NodeMgmt:\n","  def __init__(self, data):\n","    self.head=Node(data)\n","    self.tail=self.head\n","\n","  def insert(self, data):\n","    #암것도 없을 때\n","    if self.head==None:\n","      self.head=Node(data)\n","      self.tail=self.head\n","    else:\n","      node=self.head\n","      while node.next:\n","        node=node.next\n","      new=Node(data)\n","      node.next=new\n","      new.prev=node\n","      self.tail=new\n","\n","  def node_print(self):\n","    node=self.head\n","    while node:\n","      print(node.data)\n","      node=node.next\n","\n","#강사님 코드\n","  def search_form_head(self, data):\n","    if self.head == None:\n","      return False\n","    node=self.head\n","    while node:\n","      if node.data==data:\n","        return node.data\n","      else:\n","        node=node.next\n","    return False\n","\n","\n","  def search_form_tail(self, data):\n","    if self.tail == None:\n","      return False\n","    node=self.tail\n","    while node:\n","      if node.data==data:\n","        return node.data\n","      else:\n","        node=node.prev\n","    return False\n","\n","  def insert_before(self, insert, data):\n","    node2=Node(insert)\n","    if self.head == None:\n","      return False\n","    node=self.head\n","    while node:\n","      if node.data==data:\n","        temp=node.next\n","        node.next=node2\n","        node2.next=temp\n","\n","        temp2=node.next.prev\n","        node.next.prev=node2.next\n","        node2.prev=temp2\n","      else:\n","        node=node.next\n","    return False\n","\n"],"metadata":{"id":"9j2eJ5NOtnM9","executionInfo":{"status":"ok","timestamp":1729040031848,"user_tz":-540,"elapsed":468,"user":{"displayName":"김남희","userId":"08058861200894640253"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["  #강사님 코드\n","  def insert_before(self, data, after_data):\n","    if self.head == None:\n","      self.head=None(data)\n","      return True\n","    else:\n","      node=self.tail\n","      while node.data!=after_data:\n","        node=node.prev\n","        if node==None:\n","          return False\n","      #찾아서 나왔다\n","      new=Node(data)\n","      before_new=node.prev\n","      before_new.next=new\n","      new.prev = before_new\n","      new.next=node\n","      node.prev=new\n","      return True"],"metadata":{"id":"7kJVF87IyMwz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["double_linkedlist=NodeMgmt(0)\n","for data in range(1, 11):\n","  double_linkedlist.insert(data)\n","double_linkedlist.node_print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rNarM1ZTyk6z","executionInfo":{"status":"ok","timestamp":1729040034161,"user_tz":-540,"elapsed":346,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"f22ac48c-3d9b-4d9e-e08d-e239f2478daa"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]},{"cell_type":"code","source":["double_linkedlist.node_print()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QZqbbeP5xYMB","executionInfo":{"status":"ok","timestamp":1729039944703,"user_tz":-540,"elapsed":468,"user":{"displayName":"김남희","userId":"08058861200894640253"}},"outputId":"a58c43dd-0dca-4eb4-c031-dfff07296b58"},"execution_count":29,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","1\n","2\n","3\n","4\n","5\n","6\n","7\n","8\n","9\n","10\n"]}]}]}